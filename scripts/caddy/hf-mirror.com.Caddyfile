http://*.{$MIRROR_HOST} {
	redir https://{$MIRROR_HOST}
}
http://{$MIRROR_HOST} {
	log hf

	@badbots {
		expression header({'User-Agent': '*SemrushBot*', 'User-Agent': '*MJ12bot*'})
	}

	handle @badbots {
		respond 403
	}

	@asset-paths {
		expression path('/api/event', '/front/*', '/avatars/*') || path_regexp('\\.(js|css|png|jpe?g|gif|ico|woff|otf|ttf|eot|svg|txt|pdf|docx?|xlsx?)$')
	}
	skip_log @asset-paths
	encode {
		zstd
		gzip
		match {
			header Content-Type text/*
			header Content-Type application/json*
			header Content-Type application/javascript*
			header Content-Type application/xhtml+xml*
			header Content-Type application/atom+xml*
			header Content-Type application/rss+xml*
			header Content-Type image/svg+xml*
			header Content-Type image/vnd.microsoft.icon
		}
	}
	header /* Server hf-mirror
	@static {
		path / /favicon.ico /logo.svg /invalid_referer.html /login_error.html /stats /stats/* /scripts.js /styles.css /robots.txt /ads.txt /hfd/*
	}
	handle @static {
		root * /var/www/html/
		file_server
	}
	# 更换logo，用于区分原网站
	rewrite /front/assets/huggingface_logo-noborder.svg /logo.svg
	# 网站主页等页面不缓存
	header @static Cache-Control "no-cache"
	# 原网站静态文件缓存3天
	header /front/* Cache-Control "public, max-age=259200"

	# 部分内部统计接口直接返回固定数据，减少服务器压力
	handle /api/event {
		respond "OK"
		skip_log
	}
	handle /cdn-cgi/rum {
		respond 204
		skip_log
	}

	# 模型链接避免缓存
	@model_path {
		path_regexp .*/resolve/main/.*
	}
	header @model_path Cache-Control no-cache

	# 禁止第三方站点外链模型下载链接，其他路径允许外链
	@invalid_referer {
		path_regexp .*/resolve/main/.*
		not header !Referer
		not header_regexp Referer ^https?://(\.*\.)?{$MIRROR_HOST_REGEXP}(/|$)
	}
	rewrite @invalid_referer /invalid_referer.html

	# 屏蔽部分不合规路径
	@illegal {
		path_regexp /.*([xX][jJ][pP]|[Xx][Ii][Jj][Ii][Nn]|[Jj][Ii][Nn][Pp][Ii][Nn]).*
	}
	handle @illegal {
		respond "invalid request" 403
	}

	# 镜像站禁止登录
	@auth {
		path /login /join
	}
	rewrite @auth /login_error.html

	# 替换静态资源中的网站名称
	handle /front/build/kube-*/index.js {
		replace stream {
			"Hugging Face" "HF Mirror"
		}
		reverse_proxy https://huggingface.co {
			header_up Accept-Encoding identity
			header_up Host {upstream_hostport}
		}
	}
	@project_page {
		expression path_regexp('^/[^/]+/[^/]+/?$') || path_regexp('^/datasets/[^/]+/[^/]+/?$') || path_regexp('^/spaces/[^/]+/[^/]+/?$') || path_regexp('.*/tree/main/?$')
	}
	handle @project_page {
		replace stream {
			https://huggingface.co https://{$MIRROR_HOST}
			"Hugging Face" "HF Mirror"
		}
		reverse_proxy https://huggingface.co {
			header_up Accept-Encoding identity
			header_up Host {upstream_hostport}
			header_down Location cdn-lfs\.huggingface\.co cdn-lfs.{$MIRROR_HOST}
			header_down Location cdn-lfs-us-1\.huggingface\.co cdn-lfs-us-1.{$MIRROR_HOST}
                        header_down Location cdn-lfs\.hf\.co cdn-lfs.{$MIRROR_HOST}
                        header_down Location cdn-lfs-us-1\.hf\.co cdn-lfs-us-1.{$MIRROR_HOST}
			header_down Location huggingface\.co {$MIRROR_HOST}
		}
	}

	# 给 https://github.com/Lyken17/hf-torrent 项目提供 webseed 支持
	handle /ws/* {
		uri path_regexp /ws/models--([^-]+)--(.+)--([^-]+)/(.+)$ /$1/$2/resolve/$3/$4
		uri path_regexp /ws/models--(.+)--(.+)/(.+)$ /$1/resolve/$2/$3
		uri path_regexp /ws/datasets--([^-]+)--(.+)--([^-]+)/(.+)$ /datasets/$1/$2/resolve/$3/$4
		uri path_regexp /ws/datasets--(.+)--(.+)/(.+)$ /datasets/$1/resolve/$2/$3
		reverse_proxy https://huggingface.co {
			header_up Host {upstream_hostport}
			header_down Location cdn-lfs\.huggingface\.co cdn-lfs.{$MIRROR_HOST}
			header_down Location cdn-lfs-us-1\.huggingface\.co cdn-lfs-us-1.{$MIRROR_HOST}
                        header_down Location cdn-lfs\.hf\.co cdn-lfs.{$MIRROR_HOST}
                        header_down Location cdn-lfs-us-1\.hf\.co cdn-lfs-us-1.{$MIRROR_HOST}
			header_down Location huggingface\.co {$MIRROR_HOST}
		}
	}

	handle /* {
		# skip_log
		reverse_proxy https://huggingface.co {
			# header_up Accept-Encoding identity
			header_up Host {upstream_hostport}
			header_up X-Api-Key {$API_KEY}
			header_down Location cdn-lfs\.huggingface.co cdn-lfs.{$MIRROR_HOST}
			header_down Location cdn-lfs-us-1\.huggingface.co cdn-lfs-us-1.{$MIRROR_HOST}
                        header_down Location cdn-lfs\.hf\.co cdn-lfs.{$MIRROR_HOST}
                        header_down Location cdn-lfs-us-1\.hf\.co cdn-lfs-us-1.{$MIRROR_HOST}
			header_down Location huggingface\.co {$MIRROR_HOST}
		}
	}
}
